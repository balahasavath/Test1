string firefox_geturl()
{
    string ret;
    wchar_t* title = (wchar_t*)malloc(1000);

    CoInitialize(NULL);
    HWND hwnd = NULL;
    while (true)
    {
        /* hwnd = FindWindowEx(0, hwnd, L"MozillaWindowClass", NULL);
         if (!hwnd)
             break;*/

        hwnd = GetForegroundWindow();
        GetWindowText(hwnd, title, GetWindowTextLength(hwnd) + 1);

        wstring tmp(title);
        string window_title(tmp.begin(), tmp.end());

        //cout << "window title: " << window_title << endl;
        if (window_title.find("Mozilla Firefox") == string::npos)
            continue;

        if (!IsWindowVisible(hwnd))
            continue;

        CComQIPtr<IUIAutomation> uia;
        if (FAILED(uia.CoCreateInstance(CLSID_CUIAutomation)) || !uia)
            break;

        CComPtr<IUIAutomationElement> element;
        if (FAILED(uia->ElementFromHandle(hwnd, &element)) || !element)
            break;

        //initialize conditions
        CComPtr<IUIAutomationCondition> toolbar_cond;
        uia->CreatePropertyCondition(UIA_ControlTypePropertyId,
            CComVariant(UIA_ToolBarControlTypeId), &toolbar_cond);

        CComPtr<IUIAutomationCondition> combobox_cond;
        uia->CreatePropertyCondition(UIA_ControlTypePropertyId,
            CComVariant(UIA_ComboBoxControlTypeId), &combobox_cond);

        CComPtr<IUIAutomationCondition> editbox_cond;
        uia->CreatePropertyCondition(UIA_ControlTypePropertyId,
            CComVariant(UIA_EditControlTypeId), &editbox_cond);

        //find the top toolbars
        CComPtr<IUIAutomationElementArray> toolbars;
        if (FAILED(element->FindAll(TreeScope_Children, toolbar_cond, &toolbars)) || !toolbars)
            break;

        int toolbars_count = 0;
        toolbars->get_Length(&toolbars_count);
        for (int i = 0; i < toolbars_count; i++)
        {
            CComPtr<IUIAutomationElement> toolbar;
            if (FAILED(toolbars->GetElement(i, &toolbar)) || !toolbar)
                continue;

            //find the comboxes for each toolbar
            CComPtr<IUIAutomationElementArray> comboboxes;
            if (FAILED(toolbar->FindAll(TreeScope_Children, combobox_cond, &comboboxes)) || !comboboxes)
                break;

            int combobox_count = 0;
            comboboxes->get_Length(&combobox_count);
            for (int j = 0; j < combobox_count; j++)
            {
                CComPtr<IUIAutomationElement> combobox;
                if (FAILED(comboboxes->GetElement(j, &combobox)) || !combobox)
                    continue;

                CComVariant test;
                if (FAILED(combobox->GetCurrentPropertyValue(UIA_ValueValuePropertyId, &test)))
                    continue;

                //we are interested in a combobox which has no lable
                if (wcslen(test.bstrVal))
                    continue;

                //find the first editbox
                CComPtr<IUIAutomationElement> edit;
                if (FAILED(combobox->FindFirst(TreeScope_Descendants, editbox_cond, &edit)) || !edit)
                    continue;

                CComVariant bstr;
                if (FAILED(edit->GetCurrentPropertyValue(UIA_ValueValuePropertyId, &bstr)))
                    continue;

                //MessageBoxW(0, bstr.bstrVal, L"success", 0);
                ret = CT2A(bstr.bstrVal);
                if (ret == "")
                    continue;
                return ret;
            }
        }
    }
    CoUninitialize();
    return ret;
}
